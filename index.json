[{"content":"","date":"August 10, 2022","permalink":"/topics/emacs/","section":"Topics","summary":"","title":"Emacs"},{"content":"How I Org # I\u0026rsquo;ve encountered a half dozen or so personal productivity, task management, organization and motivation systems. (I will spare the list.) The latest I\u0026rsquo;ve read is David Allen\u0026rsquo;s Getting Things Done. Having been there and done this, I read Allen\u0026rsquo;s book with a \u0026ldquo;Just take me to the algorithm\u0026rdquo; mentality.\nAlso, I create software for living. Software development is an occupation that is both creative and technical. It\u0026rsquo;s also a craft that is mostly performed at a computer and is now more virtual than ever. A lot of text in Getting Things Done covers tools and techniques that support the algorithm, but are incidental: there are many ways to implement, track, and execute Allen\u0026rsquo;s techniques. A salesperson\u0026rsquo;s needs here are different than a manager\u0026rsquo;s, are different than a software engineer\u0026rsquo;s, and so on.\nMy own personal organization needs are nearly full-virtual. Either I\u0026rsquo;m in a virtual meeting, preparing for one, working on tasks from one, or\u0026mdash;and what I do best\u0026mdash;designing and writing code and building software products. And finally, I spend as much time as possible in the Emacs editor. There are many, many code editors and IDEs out there. Yet once you\u0026rsquo;ve paid the admittedly steep learning curve for Emacs, it\u0026rsquo;s the most effective \u0026ldquo;flow tool\u0026rdquo; I know of. What I do in Emacs, including this very text, I can get lost in, which means maximum productivity.\nBy the way, I do not mash up personal todos with my work as GTD encourages. I prefer a simpler in-\u0026gt;due?-\u0026gt;done for this part of my life. For personal work I use Todoist for it\u0026rsquo;s clean UX, mobile app, and sync across devices. Todoist recently added Kanban boards, so I may toy with a GTD-esque flow sans Emacs (which is a fiddly challenge to sync across devices.) That notwithstanding, I\u0026rsquo;ll continue with my Emacs setup.\nReferences # The following works were highly influential in my own productivity thinking and, of course, this article.\nGetting Things Done by David Allen: This highly popular \u0026ldquo;work of the day\u0026rdquo; got me re-thinking about personal productivity again, and tweaking some of my own practice as a result. Getting Things Done: The Science Behind Stress-Free Productivity by Francis Heylighen and Clément Vidal: An academic paper on GTD that lays a foundation for what I think is the biggest return on investment for GTD: reducing cognitive stress and overload. No less important, the authors provide an extremely concise and on-point summary of Allen\u0026rsquo;s method, including a comprehensive (wait for it) flowchart of the algorithm! Recommended reading. Trying Not To Try by Edward Slingerland: This trade book is very thought provoking if you have interest in the convergence of history, culture, religion, and creativity. Of most relevance here is the connection to \u0026ldquo;flow state\u0026rdquo;. Every section of Slingerland\u0026rsquo;s book got me thinking about my own creativity, workplace and historical bias, and where I fit on the spectrum between Confucius and Laozi. Wu-wei ftw! Org Mode Basics and Organize Your Life with Org Mode (videos): System Crafters is a great source of live code videos and one of the best ways to get into Emacs. Still Interested? # For me GTD, and various realizations of GTD in task tracking tools, are too micro for my needs. That\u0026rsquo;s where Emacs org-mode steps in. Let me begin with what got me started using org-mode.\nOh, I Need to Write That Down! # Just about every day I come across something I need to record when I wasn\u0026rsquo;t planning on recording anything. And I need to record it quickly, so I don\u0026rsquo;t lose context of whatever\u0026rsquo;s being discussed. Or, I\u0026rsquo;m deep into writing code, docs, or messages and a side thought pops into my head. I need to push the stack, record it, and pop back into what I was doing.\nUsed to be (post paper notebook) I\u0026rsquo;d bring up a note taking app \u0026ldquo;real quick\u0026rdquo;. I\u0026rsquo;ve tried a couple commercial web and platform apps and \u0026ldquo;real quick\u0026rdquo; just wasn\u0026rsquo;t quick enough. Plus, I\u0026rsquo;d often be hit cognitive stress with, \u0026ldquo;Now where do I put this?\u0026rdquo; before or after finishing my note. GTD promises \u0026ldquo;stress free\u0026rdquo;, but my stress started before organizing tasks and projects.\nAs a software engineer, one thing was invariably true: I had a code editor up. More often than not, that editor was Emacs, which I use alongside more specialized IDEs for browsing large projects, shell access, text processing, etc. (Emacs OS, as it\u0026rsquo;s called.) I started using the Emacs *scratch* buffer for quick note taking, and then copy it elsewhere later. (Or not: sometimes I\u0026rsquo;d forget!)\nI had used org-mode for outlines and generating markdown docs. It was just a matter of time for a \u0026ldquo;doh!\u0026rdquo; moment. I\u0026rsquo;d seen org-mode used as a calendar, but it was System Crafters that really sparked the light bulb for me. After absorbing the copious and cryptic org-mode documentation, experimenting for a few weeks, I settled on the following system that\u0026rsquo;s always just a M-TAB C-c c away.\nWalk-through My Setup # Emacs Setup # If you\u0026rsquo;re interested in my detailed Emacs config, i.e., init.el you can find my setup in my GitHub dotfiles repo. My org-mode config started with Organize Your Life with Org Mode. If you\u0026rsquo;re new to Emacs or org-mode, start there.\nThe rest of this doc is a walk-through with animated GIFs to illustrate.\nIt All Starts with a Meeting # Let\u0026rsquo;s start with a meeting, which was my original use-case. Alt-tab to Emacs, then C-c c m to open an entry in meetings.org from the meeting template. The template will ask who the meeting is with and what it\u0026rsquo;s about. (There\u0026rsquo;s also a 1-on-1 meeting template, with just the \u0026ldquo;who?\u0026rdquo; question, C-c c 1.)\nFigure 1: Fave Music meeting with Lunis and Lucy When the meeting is over and I\u0026rsquo;m ready to finish the capture I\u0026rsquo;d normally hit C-c C-c. Instead, I\u0026rsquo;ll use C-u C-u C-c C-c to follow the capture buffer into the filed location in meetings.org. I\u0026rsquo;ll add a TODO manually, without a template, by typing M-enter to open a new outline node and then TODO Learn Für Elise on piano. Text files ftw!\nFigure 2: File the meeting, create a task Check the Backlog, Schedule the Task # C-c a a brings up my agenda for the week. It\u0026rsquo;s empty right now, nothing scheduled. C-c a b brings up my backlog view. I\u0026rsquo;ll I see the \u0026ldquo;Learn Für Elise on piano\u0026rdquo; todo. Using GTD practice, I can either do this right away (2m rule, iirc) and make it DONE, move it to NEXT state, or realize it\u0026rsquo;s too big for a single task and break it up. #+CAPTION Agenda check My Algorithm # Now\u0026rsquo;s a good time to highlight the tasks states I use and my typical path through them.\nReview Backlog, Schedule Work # C-c a b into my backlog view, I realize my task is a project, too big on its own. (I try to visit the backlog at least once a day.) I\u0026rsquo;m going to set the task to BREAKDOWN-PLAN. (For example, I have to get a keyboard, buy the sheet music, hire a music teacher) and schedule the planning work for tomorrow.\nIn the backlog view cursor to the \u0026ldquo;TODO Learn Für Elise on piano\u0026rdquo;, use C-c C-t and choose the new state with b. Then, C-c C-s brings up the calendar. S-→ navigates the calendar. I\u0026rsquo;ll finish with C-c a a to double check my agenda. Check Agenda, Plan Project # Later, I\u0026rsquo;ll check my agenda, C-c a a, arrow down to the BREAKDOWN-PLAN task, hit ENTER to jump to the task. I\u0026rsquo;ll drop TODO entries right under that in the outline. I\u0026rsquo;ll change that BREAKDOWN-PLAN state to PLANNED, then C-x C-s to save. Refile Into Projects File, Set Deadlines, Tee up Tasks # Refile is the gem of org-mode. I don\u0026rsquo;t want to track and annotate my project in my meetings folder, that\u0026rsquo;s not the way. I\u0026rsquo;m going to move the whole project outline to my projects folder.\nC-x C-f meetings.org to open my meetings file, arrow to the PLANNED project, and C-c C-w to invoke org-mode refile. Prep and Schedule my Backlog # Next, I\u0026rsquo;ll set deadlines and move tasks to NEXT state. C-c a b to the backlog, C-c C-t n for NEXT state and C-c C-d to set deadlines, C-c C-s for scheduled dates. Then I hand edit the \u0026ldquo;Practice Weekly\u0026rdquo; task scheduled date for a 1 week repeated task. (Either you love text files, or you don\u0026rsquo;t.) Add Reference Note, Link it in Project # Finally I\u0026rsquo;ll take some historical notes about Für Elise and put a link to those notes into the project outline. I open a reference note with C-c c n and save it with C-u C-u C-c C-c. The template asks for a title, then I can tap in text. I\u0026rsquo;ve bound C-c l to save an \u0026ldquo;anchor link\u0026rdquo; at the current point, and can then open projects.org and use C-c C-l to paste it in. Features, Features, and more Features # Emacs org-mode has a dizzying array of features and this walk-through is only meant to capture the essence of how I org. I don\u0026rsquo;t use all of these, but for reference, here goes\u0026hellip;\nTags Habits Time tracking Executing code blocks (Babel) Exporting (say, to markdown or HTML) and publishing Blogging and content sites And of course, we\u0026rsquo;re talking Emacs here. If you can code it in Elisp, you can do it.\n","date":"August 10, 2022","permalink":"/posts/how-i-org/","section":"Posts","summary":"How I Org # I\u0026rsquo;ve encountered a half dozen or so personal productivity, task management, organization and motivation systems.","title":"How I Org, A Software Engineer's Process"},{"content":"","date":"August 10, 2022","permalink":"/topics/org-mode/","section":"Topics","summary":"","title":"Org-mode"},{"content":"","date":"August 10, 2022","permalink":"/tags/personal-process/","section":"Tags","summary":"","title":"personal-process"},{"content":"","date":"August 10, 2022","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"August 10, 2022","permalink":"/tags/productivity/","section":"Tags","summary":"","title":"productivity"},{"content":"","date":"August 10, 2022","permalink":"/","section":"rmorison.github.io","summary":"","title":"rmorison.github.io"},{"content":"","date":"August 10, 2022","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"August 10, 2022","permalink":"/topics/","section":"Topics","summary":"","title":"Topics"}]